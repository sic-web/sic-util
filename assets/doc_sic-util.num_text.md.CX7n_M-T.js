import{_ as i,c as s,o as a,ag as e}from"./chunks/framework.BV_l4J1V.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/sic-util.num_text.md","filePath":"doc/sic-util.num_text.md"}'),n={name:"doc/sic-util.num_text.md"};function p(r,t,h,l,d,k){return a(),s("div",null,t[0]||(t[0]=[e('<p><a href="./">Home</a> &gt; <a href="./sic-util.html">sic-util</a> &gt; <a href="./sic-util.num_text.html">num_text</a></p><h2 id="num-text-function" tabindex="-1">num_text() function <a class="header-anchor" href="#num-text-function" aria-label="Permalink to &quot;num\\_text() function&quot;">​</a></h2><p>数字转中文数码</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes light-plus github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#B392F0;">num_text</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">number</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">type</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#E1E4E8;"> string</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#0000FF;--shiki-dark:#79B8FF;"> false</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>number</p></td><td><p>number | string | undefined</p></td><td></td></tr><tr><td><p>type</p></td><td><p>string</p></td><td><p><em>(Optional)</em> 文本类型，lower|upper，默认upper</p></td></tr></tbody></table> **Returns:** <p>string | false</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>number2text(100000000) =&gt; &quot;壹亿元整&quot;</p>',11)]))}const c=i(n,[["render",p]]);export{u as __pageData,c as default};
